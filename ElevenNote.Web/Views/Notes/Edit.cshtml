@model ElevenNote.Models.NoteEditViewModel
@{
    ViewBag.Title = "Update";
}
<h2>Update</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Note Update</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.NoteId)
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsStarred, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.CheckBox("IsStarred", Model.IsStarred ?? false)
                    @Html.ValidationMessageFor(model => model.IsStarred, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="input-group col-md-10">
                <span class="input-group-btn">
                    @{
                        List<SelectListItem> listPriorities = new List<SelectListItem>();
                        listPriorities.Add(
                            new SelectListItem
                            {
                                Text = "N/A",
                                Value = "NA",
                            }
                        );
                        listPriorities.Add(
                            new SelectListItem
                            {
                                Text = "Low",
                                Value = "Low",
                            }
                        );
                        listPriorities.Add(
                            new SelectListItem
                            {
                                Text = "Medium",
                                Value = "Medium"
                            }
                        );
                        listPriorities.Add(
                            new SelectListItem
                            {
                                Text = "High",
                                Value = "High"
                            }
                        );
                    }
                    @Html.DropDownListFor(model => model.Priority, listPriorities, new { @class = "btn btn-default" })
                </span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
                        }
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
