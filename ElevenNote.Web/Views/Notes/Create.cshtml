@model ElevenNote.Models.NoteCreateViewModel
@{
    ViewBag.Title = "Create";
}
<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Create a New Note</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Content, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    List<SelectListItem> listPriorities = new List<SelectListItem>();
                    listPriorities.Add(
                        new SelectListItem
                        {
                            Text = "N/A",
                            Value = "NA",
                            Selected = true
                        }
                    );
                    listPriorities.Add(
                        new SelectListItem
                        {
                            Text = "Low",
                            Value = "Low",
                        }
                    );
                    listPriorities.Add(
                        new SelectListItem
                        {
                            Text = "Medium",
                            Value = "Medium"
                        }
                    );
                    listPriorities.Add(
                        new SelectListItem
                        {
                            Text = "High",
                            Value = "High"
                        }
                    );
                }
                @Html.DropDownListFor(model => model.Priority, listPriorities, new { @class = "btn btn-default" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
                    }
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
